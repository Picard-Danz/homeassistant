substitutions:
  devicename: USER1-office-desktop-clock
  friendly_name: USER1's Office Desktop Clock
  board: esp32dev
  # Pin definition from https://github.com/aptonline/PixelIt_Ulanzi 
  battery_pin: GPIO34 
  buzzer_pin: GPIO15 
  ldr_pin: GPIO35 
  matrix_pin: GPIO32 
  left_button_pin: GPIO26 
  mid_button_pin: GPIO27 
  right_button_pin: GPIO14 
  scl_pin: GPIO22 
  sda_pin: GPIO21 

switch:
  - platform: template
    name: "$devicename Display"
    icon: "mdi:power"
    restore_mode: ALWAYS_ON
    lambda: |-
      return id(rgb8x32)->show_display;
    turn_on_action:
      lambda: |-
        id(rgb8x32)->set_display_on();
    turn_off_action:
      lambda: |-
        id(rgb8x32)->set_display_off();
  - platform: template
    name: "Auto-Adjust Brightness"
    id: switch_autobrightness
    icon: mdi:brightness-auto
    restore_mode: RESTORE_DEFAULT_ON
    lambda: |-
      if (id(aab_enable)) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      lambda: |-
        id(aab_enable) = true;
    turn_off_action:
      lambda: |-
        id(aab_enable) = false;

globals:
  # aab = auto-adjustable brightness
  - id: aab_enable
    type: "bool"
    restore_value: true
    initial_value: "true"
  - id: aab_add
    type: int
    initial_value: '10'
  - id: aab_max
    type: int
    initial_value: '220'
  - id: aab_min
    type: int
    initial_value: '45'

external_components:
  - source:
      type: git
      url: https://github.com/lubeda/EspHoMaTriXv2
      ref: main
    refresh: 60s 
    components: [ ehmtxv2 ]   

esphome:
  comment: "USER1's Office Desktop Clock"
  name: $devicename 
  on_boot:
    then:
      - ds1307.read_time:
      - lambda: |-
          id(rgb8x32)->set_today_color(0,255,0);
          id(rgb8x32)->set_weekday_color(0,0,255);

output:
  - platform: ledc
    pin: $buzzer_pin
    id: rtttl_out

rtttl:
  output: rtttl_out

esp32:
  board: esp32dev

font:
  - file: desktop_clock/fonts/MatrixClock-Light8.bdf
    id: default_font
    #size: 16
    glyphs:  |
      ! "#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz°
  - file: desktop_clock/fonts/MatrixClock-Chunky6.bdf
    id: special_font
    #size: 17
    glyphs:  |
      ! "#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz°

binary_sensor:
  - platform: status
    name: "$devicename Status"
  - platform: gpio
    pin:
      number: $left_button_pin
      inverted: true
    name: "$devicename left button"
  - platform: gpio
    pin: 
      inverted: true
      number: $mid_button_pin
      mode: INPUT_PULLUP
    name: "$devicename Middle button"
  - platform: gpio
    pin: 
      number: $right_button_pin
      inverted: true
    name: "$devicename Right button"

logger:
  level: WARN

api:
  services:
    - service: tune
      variables:
        tune: string
      then:
        - rtttl.play:
            rtttl: !lambda 'return tune;'

sensor:
  - platform: adc
    pin: $battery_pin
    name: "$devicename Battery"
    id: battery_voltage
    update_interval: 10s
    device_class: battery
    accuracy_decimals: 0
    attenuation: auto
    filters:
      - sliding_window_moving_average:
          window_size: 15
          send_every: 15
          send_first_at: 1
      - multiply: 1.6
      - lambda: |-
          auto r = ((x - 3) / 0.69 * 100.00);
          if (r >= 100) return 100;
          if (r > 0) return r;
          if (r <= 0) return 1;
          return 0;
    unit_of_measurement: '%'
  - platform: adc
    id: light_sensor
    name: "$devicename Illuminance"
    pin: $ldr_pin
    update_interval: 10s
    attenuation: auto
    unit_of_measurement: lx
    device_class: illuminance
    accuracy_decimals: 0
    filters:
      - lambda: |-
          return (x / 10000.0) * 2000000.0 - 15 ;
    on_value:
      then:
        - lambda: |-
            if ( id(aab_enable) ) {
              int n = x / 4 + id(aab_add); // new_value
              if (n > id(aab_max)) n = id(aab_max);
              if (n < id(aab_min)) n = id(aab_min);
              int c = id(rgb8x32)->get_brightness(); // current value
              c = c>0?c:1 ; 
              int d = (n - c) * 100 / c; // diff in %
              if ( abs(d) > 2 ) id(rgb8x32)->set_brightness(n);
            }
      
ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  domain: !secret domain

web_server:

number:
  - platform: template
    name: "$devicename brightness"
    min_value: 0
    max_value: 255
    step: 1
    lambda: |-
      return id(rgb8x32)->get_brightness();
    set_action:
      lambda: |-
        id(rgb8x32)->set_brightness(x);

i2c:
  sda: $sda_pin
  scl: $scl_pin
  scan: true
  id: i2cbus

light:
  - platform: neopixelbus
    id: ehmtx_light
    internal: false
    type: GRB
    variant: WS2812
    pin: $matrix_pin
    num_leds: 256
    color_correct: [30%, 30%, 30%]
    name: "$devicename Light"
    restore_mode: ALWAYS_OFF
    on_turn_on:
      lambda: |-
         id(ehmtx_display)->set_enabled(false);
    on_turn_off:
       lambda: |-
         id(ehmtx_display)->set_enabled(true);

time:
  - platform: homeassistant
    on_time_sync:
      then:
        ds1307.write_time:
  - platform: ds1307
    update_interval: never
    id: ehmtx_time

display:
  - platform: addressable_light
    id: ehmtx_display
    addressable_light_id: ehmtx_light
    width: 32
    height: 8
    pixel_mapper: |-
      if (y % 2 == 0) {
        return (y * 32) + x;
      }
      return (y * 32) + (31 - x);
    rotation: 0°
    update_interval: 16ms
    auto_clear_enabled: true
    lambda: |-
      id(rgb8x32)->tick();
      id(rgb8x32)->draw();
      
ehmtxv2:
  id: rgb8x32                         #(required, ID): Manually specify the ID used for code generation and in service definitions.
  date_format: "%m.%d"                #(optional, string): formats the date display with strftime syntax, defaults "%d.%m." (use "%m.%d." for the US)
  show_seconds: false                 #(optional, boolean): toggle an indicator for seconds while the clock is displayed (default: false)
  time_format: "%I:%M"             #(optional, string): formats the date display with strftime syntax, defaults "%H:%M" (use "%I:%M%p" for the US)
  default_font_yoffset: 8             #(optional, pixel): yoffset the text is aligned BASELINE_LEFT, the baseline defaults to 6
  default_font_xoffset: 1             #(optional, pixel): xoffset the text is aligned BASELINE_LEFT, the left defaults to 1
  special_font_yoffset: 7             #(optional, pixel): yoffset the text is aligned BASELINE_LEFT, the baseline defaults to 6
  special_font_xoffset: 1             #(optional, pixel): xoffset the text is aligned BASELINE_LEFT, the left defaults to 1
  rtl: false                          #(optional, boolean): if true write text (but only the scroll direction, the words and numbers aren't changed!) from right to left (Arabic, Hebrew etc.). Default is false
  matrix_component: ehmtx_display     #(required, ID): ID of the addressable display
  show_date: false                    #(optional, bool): show the date in the loop (rainbow and normal), defaults to true.
  show_dow: true                      #(optional, bool): draw the day of week rindicator on the bottom of the clock screen. Disable, e.g., if you want larger fonts, defaults to true.
  time_component: ehmtx_time          #(required, ID): ID of the time component. The display shows !t! until the time source is valid.
  default_font_id: default_font       #(required, ID): ID of the default font
  special_font_id: special_font       #(required, ID): ID of the special font, you can reuse your default font, but occasionally, it's nice to have a special font to minimize scrolling
  week_start_monday: false            #(optional, bool): default Monday is first day of week, false => Sunday
  default_clock_font: false           #(optional, boolean): If true, use the default font for clock and date otherwise use the special font. (default = true)
  scroll_interval: 80                 #(optional, ms): the interval in ms to scroll the text (default=80), should be a multiple of the update_interval of the display
  clock_interval: 90                  #(optional, s): the interval in seconds to force the clock display. By default, the clock screen, if any, will be displayed according to the position in the queue. If you set the clock_interval close to the screen_time of the clock, you will only see the clock! (default=0)
  icons2html: true                    #(optional, boolean): If true, generate the HTML-file (filename.html) to show all included icons.  (default = false)
  icons: 
    - id: ha
      lameid: 7956
    - id: plug
      lameid: 403
    - id: humidity
      lameid: 51764
    - id: co2
      lameid: 30662
    - id: pacman
      file: desktop_clock/icons/pacman.gif
    - id: mk3print3dprogress
      file: desktop_clock/icons/3dprint.gif
    - id: mk3print3dcomplete
      file: desktop_clock/icons/clock.gif
    - id: mk3print3ddone
      file: desktop_clock/icons/3dprintdone.gif
    - id: miniprint3dprogress
      file: desktop_clock/icons/3dprint.gif
    - id: miniprint3dcomplete
      file: desktop_clock/icons/clock.gif
    - id: miniprint3ddone
      file: desktop_clock/icons/3dprintdone.gif
    - id: error
      file: desktop_clock/icons/error.png
    - id: donotdisturb
      file: desktop_clock/icons/error.png
    - id: doorbell
      file: desktop_clock/icons/doorbell.gif
    - id: house
      file: desktop_clock/icons/house.gif
    - id: washerdone
      file: desktop_clock/icons/washer.gif
    - id: dryerdone
      file: desktop_clock/icons/dryer.gif
    - id: cars
      file: desktop_clock/icons/cars.gif
    - id: echotimer
      file: desktop_clock/icons/echotimer.gif
    - id: echotimerdone
      file: desktop_clock/icons/echotimerdone.gif
    - id: door
      file: desktop_clock/icons/door.gif
    - id: garageopen
      file: desktop_clock/icons/garageopen.gif
    - id: garageclose
      file: desktop_clock/icons/garageclose.gif
    - id: weather_clear_night
      lameid: 13345
    - id: weather_cloudy
      lameid: 2283
    - id: weather_fog
      lameid: 52167
    - id: weather_sunny
      lameid: 11201
    - id: weather_rainy
      lameid: 22363
    - id: weather_partly_cloudy
      lameid: 51452
    - id: weather_partlycloudy
      lameid: 51452
    - id: weather_snow
      lameid: 1673
    - id: home_assistant
      lameid: 47693
    - id: temperature
      lameid: 2056
    - id: lightbulb
      lameid: 1762
    - id: music
      lameid: 45625
    - id: phone
      lameid: 1232
    - id: car
      lameid: 2819
    - id: sleep8x32
      url: https://user-images.githubusercontent.com/16407309/224850723-634c9b2d-55d9-44f2-9f93-765c0485b090.gif 
  on_next_screen:
    - homeassistant.event:
        event: esphome.new_screen
        data_template:
          iconname: !lambda "return icon.c_str();"
          text: !lambda "return text.c_str();"
